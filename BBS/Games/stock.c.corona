// ªÑ²¼Åo by dsyan 87.6.21

#include "bbs.h"
#include <sys/ipc.h>
#include <sys/shm.h>
#define TOTAL_STOCK (1000)

struct stock {
	char name[TOTAL_STOCK][7];
	char ud[21];
	unsigned long price[TOTAL_STOCK];
	unsigned int max_page;
	unsigned int max;
};

unsigned int
p_stock ()
{
	char result[15]="¥[Åv«ü¼Æº¦¶^x";
	int color;
	char tmp[200], f_name[200];
	unsigned int money;
	unsigned int own[TOTAL_STOCK];
	unsigned int page = 0;
	unsigned int total = 0, total_global, total_user;
	unsigned long st_total, st_price;
	struct stock *stock;
	FILE *stock_global_file, *stock_global_name;
	FILE *stock_user_file,  *stock_user_log;
		
	more ("game/stock_welcome", YEA);
	showtitle ("ªÑ¥«¤j¦ë", BoardName);
	
	setutmpmode (STOCK);
	
	stock = (struct stock *) malloc(sizeof(struct stock));
	if(stock == NULL) {
		pressanykey("°O¾ÐÅé°t¸m¿ù»~¡I¦A¸Õ¤@¦¸¬Ý¬Ý¡I");
		return 1;
	}

	sprintf (f_name, "home/%s/stock", cuser.userid);
	
	if (stock_user_file = fopen (f_name, "r"))
		for (total = 0; total < TOTAL_STOCK; total++)
			fscanf (stock_user_file, "%d\n", &own[total]);
	else {
		stock_user_file = fopen (f_name, "w");
		for (total = 0; total < TOTAL_STOCK; total++) {
			fprintf (stock_user_file, "%d\n", 0);
			own[total] = 0;
		}
	}

	fclose (stock_user_file);
	
	// Åª¸ê®ÆÀÉ
	
	if (stock_global_file = fopen ("game/stock_now", "r")) {
//		char change_status[7]="µL¸ê®Æ";
		long tmpp,i;
		char tmpn[7];
		total_global = 0;
		for (i=0; i < TOTAL_STOCK ; i++)
			stock -> price[i] = 0;
		fgets (tmp, 200, stock_global_file);
		tmp[20] = 0;
		if (strcmp (tmp, stock -> ud)) {
			strcpy (stock -> ud, tmp);
			if (stock_global_name = fopen ("game/stock_name", "r")) {
				while (fgets (stock -> name[total_global], 7, stock_global_name)) {
					fgets (tmp, 7, stock_global_name);
					total_global++;
				}
				fclose (stock_global_name);
			}
			game_log (STOCK, "\n§ó·s¸ê®Æ %s ", stock -> ud);
			while (fgets (tmp, 200, stock_global_file)) {
				if (tmp[0] == '|' && !(strncmp(result, tmp + 6, 6))) {
					if (!strncmp(tmp + 54, result + 12, 1)) {
						strncpy (tmp + 54, result + 10, 2);
						color = 32;
					}
					else {
						strncpy (tmp + 54, result + 8, 2);
						color = 31;
					}
					strncpy (result, tmp + 47, 14);
					result[14] = '\0';
					continue;					
				}
				if (tmp[0] != '|' || tmp[1] < '0' || tmp[1] > '9')
					continue;
				tmp[12] = 0;
				tmp[53] = 0;
				tmpp = atof (tmp + 47) * 100;
				strcpy (tmpn, tmp + 6);
				for (total_user = 0; total_user < total_global; total_user++) {
					if (!strcmp (tmpn, stock -> name[total_user])) {
						stock -> price[total_user] = tmpp;
						break;
					}
				}
			}
			fclose (stock_global_file);
//			for (i=0; i < total_global; i++) {
//				if (! stock -> price[i])
//					strcpy (stock -> name [i], change_status);
//			}
			stock -> max = total_global;
			stock -> max_page = total_global / 40;
			if (stock -> max_page % 40)
				stock -> max_page++;
		}
	}
	while (-1) {
		unsigned int i, r;
		time_t now = time(NULL);
		struct tm *ptime = localtime(&now);
		// µe­±¥Dµ{¦¡
		move (1, 0);
		clrtobot ();
		prints ("[37;1;46m ½s¸¹ [42m ªÑ ²¼ ¦W ºÙ [43m »ù ®æ"
		" [45m «ù¦³±i¼Æ [m    [37;46;1m ½s¸¹ [42m ªÑ ²¼ ¦W ºÙ"
		" [43m »ù ®æ [45m «ù¦³±i¼Æ [m");
		for (i = 0; i < 20; i++) {
			move (i + 2, 0);
			r = page * 40 + i;
			if (r + 1 <= stock -> max)
				prints (" %3d)  %10s%6d.%02d %5d         ", r + 1, stock -> name[r], stock -> price[r] / 100, stock -> price[r] % 100, own[r]);
			r = page * 40 + i + 20;
			if (r + 1 <= stock -> max)
				prints ("%3d)  %10s%6d.%02d %5d\n", r + 1, stock -> name[r], stock -> price[r] / 100, stock -> price[r] % 100, own[r]);
		}
		move (22, 0);
		prints ("[44mn:¤U­¶ p:¤W­¶ b:¶R s:½æ v:¬Ý e:­× q:¸õ¥X ª÷:%-8d  %2d/%2d [m[47;%dm ¦¬½L%10s[m", 
		cuser.money, page + 1, stock -> max_page, color, result);
		total = igetkey ();
		switch (total) {
			case '\r':
				if ((total = search_num( total, stock -> max_page-1)) >= 0 && total != -1)
					page = total ;
				break;
			case 'b':
			case 'B':
				now = time (0);
				ptime = localtime (&now);
				if (ptime -> tm_hour > 9 && ptime -> tm_hour < 14) {
					move (23, 0);
					pressanykey("¥æ©ö®É¶¡¬°¨C¤Ñ¤U¤È¨âÂI¨ì¹j¤Ñ¦­¤W¤EÂI..");
					break;
				}
				move (23, 0);
				prints ("­n¶R¨º®a¡H(1-%d) ", stock -> max);
				getdata (23, 19, " ", tmp, 4, 1, 0);
				total = atoi (tmp);
				if (total < 1 || total > stock -> max) {
					pressanykey("¿é¤J¿ù»~");
					break;
				}
				st_price = stock -> price[total - 1] / 100;
				if (st_price == 0.0) {
					pressanykey("¦ÑÁó¤£¦b®a¡A¤µ¤Ñ¤£½æ°Õ");
					break;
				}
				if (st_price >= 1000) {
					pressanykey("ºî¦X«ü¼ÆµLªk¶R½æ¡I");
					break;
				}
				st_price = stock -> price[total - 1];
				st_total = cuser.money / (st_price);
				total_user = (unsigned int) st_total;
				move (23, 0);
				prints ("­n¶R´X±i¡H(0 -%2d) ", total_user);
				getdata (23, 19, " ", tmp, 5, 1, 0);
				total_global = atoi (tmp);
				if (total_global > total_user || total_global < 1) {
					prints ("st.price=%d",st_price);
					pressanykey("¿é¤J¿ù»~");
					break;
				}
				now = time (0);
				st_total = total_global * stock -> price[total - 1] * 0.02;
				sprintf (tmp, "%s %s ", Cdate (&now), cuser.userid);
				game_log(STOCK, "\n%s ¶R¤F %s %d ±i.. ªá %d", tmp, stock -> name[total - 1], total_global, (unsigned int) st_total);
				sprintf (f_name, "home/%s/stock_log", cuser.userid);
				stock_user_log = fopen (f_name, "a+");
				now = time (0);
				st_total = total_global * st_price * 1.02;
				fprintf(stock_user_log, "%s ¥H %f ªº»ù®æ¶R¤F %s %d ±i.. ªá %d\n", Cdate (&now), (float) stock -> price[total - 1] / 100, stock -> name[total - 1], total_global, (unsigned int) st_total);
				fclose(stock_user_log);
				money = (unsigned int) st_total;
				demoney (money);
				own[total - 1] += total_global;
				break;
			
			case 's':
			case 'S':
				now = time (0);
				ptime = localtime (&now);
				if (ptime -> tm_hour > 9 && ptime -> tm_hour < 14) {
					move (23, 0);
					pressanykey("¥æ©ö®É¶¡¬°¨C¤Ñ¤U¤È¨âÂI¨ì¹j¤Ñ¦­¤W¤EÂI..");
					break;
				}
				move (23, 0);
				prints ("­n½æ¨º®a¡H(1-%d) ", stock -> max);
				getdata (23, 19, " ", tmp, 4, 1, 0);
				total = atoi (tmp);
				if (total < 1 || total > stock -> max || !own[total - 1]) {
					pressanykey("¿é¤J¿ù»~");
					break;
				}
				st_price = stock -> price[total - 1];
				move (23, 0);
				prints ("­n½æ´X±i¡H(0 -%2d) ", own[total - 1]);
				getdata (23, 19, " ", tmp, 5, 1, 0);
				total_global = atoi (tmp);
				if (total_global > own[total - 1] || total_global <= 0) {
					pressanykey("¿é¤J¿ù»~");
					break;
				}
				now = time (0);
				st_total = total_global * st_price * 0.05;
				sprintf (tmp, "%s %s ", Cdate (&now), cuser.userid);
				game_log(STOCK, "\n%s ½æ¤F %s %d ±i.. ±o %d", tmp, stock -> name[total - 1], total_global, (unsigned int) st_total);
				sprintf (f_name, "/home/bbs/home/%s/stock_log", cuser.userid);
				stock_user_log = fopen (f_name, "a+");
				fprintf (stock_user_log, "%s ¥H %f ªº»ù®æ½æ¤F %s %d ±i.. ±o %d\n", Cdate (&now), (float) stock -> price[total - 1] / 100, stock -> name[total - 1], total_global, (unsigned int) st_total);
				fclose (stock_user_log);
				st_total = total_global * st_price * 0.95;
				money = (unsigned int) st_total;
				inmoney (money);
				own[total - 1] -= total_global;
				break;
			
			case 'v':
			case 'V':
				sprintf (f_name, "home/%s/stock_log", cuser.userid);
				more (f_name, YEA);
				showtitle ("ªÑ¥«¤j¦ë", BoardName);
				break;
			
			case 'e':
			case 'E':
				sprintf (f_name, "home/%s/stock_log", cuser.userid);
				total_user = vedit (f_name, NA);
				showtitle ("ªÑ¥«¤j¦ë", BoardName);
				break;
			
			case KEY_UP:
			case KEY_PGUP:
			case 'p':
			case 'P':
				if (page)
					page--;
				break;

			case ' ':
			case KEY_DOWN:
			case KEY_PGDN:
			case 'n':
			case 'N':
				if (page + 1 < stock -> max_page)
					page++;
				break;
		
			case KEY_LEFT:
			case 'q':
			case 'Q':
				sprintf (f_name, "home/%s/stock", cuser.userid);
				stock_user_file = fopen (f_name, "w");
				for (total = 0; total < TOTAL_STOCK; total++)
					fprintf (stock_user_file, "%d\n", own[total]);
				fclose (stock_user_file);
				// free(stock);
				return 1;
		
			default:
				break;
			
		}
	}
}
